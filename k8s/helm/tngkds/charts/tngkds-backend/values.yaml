# Default values for tngkds-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # Create this image before your local installing with: "docker build -t kds:0.0.1" and load
  # this image into your local minikube cluster with: "minikube image load kds:0.0.1"
  repository: ghcr.io/worldhealthorganization/tng-key-distribution/tng-key-distribution
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.0.1-d890889"  #"0.0.1-2840d04"

#kubectl -n <k8s-namespace> create secret docker-registry <k8s-docker-registry-secret-name> --docker-server=ghcr.io --docker-username=<github-username> --docker-password=<github-personal-access-token>  --docker-email=<email-address> -o yaml
#kubectl -n kds create secret docker-registry tng-distribution-pull-secret --docker-server=ghcr.io --docker-username=anonymous --docker-password=<PAT>  --docker-email=anonymous@example.com -o yaml
imagePullSecrets: tng-distribution-pull-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      nodePort: 30166
      protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Postgres
psql:
  serviceName: postgres
  port: 5432
  dbName: postgres
  cluster: svc.cluster.local

# ConfigMap
configMap:
  data:
    host: localhost
    dbName: postgres

# Spring
spring:
  profile: cloud

# Server port
server:
  port: 8080


gateway:
  connector:
    enabled: true
    endpoint: https://tng-dev.who.int
    proxy:
      enabled: false
    max-cache-age: 300
    tls-trust-store: #CA of TNG Gateway of TLS certificate
      alias: tng-tls-server-certificate
      password: dgcg-p4ssw0rd
      path: certs/tng_tls_server_truststore.p12
    tls-key-store: # client cert key pair of participant
      alias: clientcredentials
      password: dgcg-p4ssw0rd
      path: certs/tls_key_store.p12
    trust-anchor: # TA pem file of TNG that was used for signing
      alias: trustanchor
      password: dgcg-p4ssw0rd
      path: certs/trustanchor_store.jks
