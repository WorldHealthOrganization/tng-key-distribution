apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tngkds-backend.fullname" . }}
  labels:
    {{- include "tngkds-backend.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tngkds-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "tngkds-backend.labels" . | nindent 8 }}
    spec:
      initContainers:
        - name: liquibase
          image: "{{ .Values.liquibaseImage.repository }}:{{ .Values.liquibaseImage.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - liquibase update --changeLogFile=db/changelog.yaml;
          env:
            - name: LIQUIBASE_COMMAND_URL
            {{- if .Values.psql.asPod.enabled }}
              value: "jdbc:postgresql://{{ .Values.psql.serviceName }}.{{ .Release.Namespace }}.{{ .Values.psql.cluster }}:{{ .Values.psql.port }}/{{ .Values.psql.dbName }}"
            {{ else }}
              value: "jdbc:postgresql://{{ .Values.psql.serviceName }}:{{ .Values.psql.port }}/{{ .Values.psql.dbName }}"
            {{ end -}}
            - name: LIQUIBASE_COMMAND_USERNAME
              value: {{ .Values.psql.username | quote }}
            - name: LIQUIBASE_COMMAND_PASSWORD
              value: {{ .Values.psql.password | quote }}
            - name: LIQUIBASE_SEARCH_PATH
              value: /liquibase
            - name: LIQUIBASE_LOG_LEVEL
              value: ERROR
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{ range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}
          {{ end }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.server.port }}"
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.spring.profile }}
            - name: SPRING_DATASOURCE_URL
            {{- if .Values.psql.asPod.enabled }}
              value: "jdbc:postgresql://{{ .Values.psql.serviceName }}.{{ .Release.Namespace }}.{{ .Values.psql.cluster }}:{{ .Values.psql.port }}/{{ .Values.psql.dbName }}"
            {{ else }}
              value: "jdbc:postgresql://{{ .Values.psql.serviceName }}:{{ .Values.psql.port }}/{{ .Values.psql.dbName }}"
            {{ end -}} 
            - name: SPRING_DATASOURCE_DRIVERCLASSNAME
              value: "org.postgresql.Driver"
            - name: SPRING_DATASOURCE_JNDI_NAME
              value: "false"
            - name: SPRING_JPA_DATABASEPLATFORM
              value: "org.hibernate.dialect.PostgreSQLDialect"
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.psql.username | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.psql.password | quote }}
            - name: DGC_GATEWAY_CONNECTOR_TLS_TRUST_STORE_PATH
              value: {{ .Values.gateway.connector.tls_trust_store.path }}
            - name: DGC_GATEWAY_CONNECTOR_TLS_TRUST_STORE_PASSWORD
              value: {{ .Values.gateway.connector.tls_trust_store.password | quote }}
            - name: DGC_GATEWAY_CONNECTOR_TLS_TRUST_STORE_ALIAS
              value: {{ .Values.gateway.connector.tls_trust_store.alias }}
            - name: DGC_GATEWAY_CONNECTOR_TLS_KEY_STORE_PATH
              value: {{ .Values.gateway.connector.tls_key_store.path }}
            - name: DGC_GATEWAY_CONNECTOR_TLS_KEY_STORE_PASSWORD
              value: {{ .Values.gateway.connector.tls_key_store.password | quote }}
            - name: DGC_GATEWAY_CONNECTOR_TLS_KEY_STORE_ALIAS
              value: {{.Values.gateway.connector.tls_key_store.alias }}
            - name: DGC_GATEWAY_CONNECTOR_TRUST_ANCHOR_PATH
              value: {{ .Values.gateway.connector.trust_anchor.path }}
            - name: DGC_GATEWAY_CONNECTOR_TRUST_ANCHOR_PASSWORD
              value: {{ .Values.gateway.connector.trust_anchor.password | quote }}
            - name: DGC_GATEWAY_CONNECTOR_TRUST_ANCHOR_ALIAS
              value: {{ .Values.gateway.connector.trust_anchor.alias }}
            - name: DGC_GATEWAY_CONNECTOR_ENABLED
              value: {{ .Values.gateway.connector.enabled | quote }}
            - name: DGC_GATEWAY_CONNECTOR_ENDPOINT
              value: {{ .Values.gateway.connector.endpoint }}
          {{- if .Values.did.enableDidGeneration }}
          {{- range $name, $val := .Values.did }}
            - name: DGC_{{ $name | upper }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: secrets-jks
              mountPath: /certs
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: secrets-jks
          secret:
            secretName: mtls-secret
            items:
              - key: tls_key_store.p12
                path: tls_key_store.p12
              - key: trustanchor_store.jks
                path: trustanchor_store.jks
              - key: tng_tls_server_truststore.p12
                path: tng_tls_server_truststore.p12
